execute pathogen#infect()
silent! call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BASIC EDITING CONFIGURATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible                  " Must come first because it changes other options.
syntax enable
filetype plugin indent on         " Turn on file type detection.
set tabstop=2                     " Global tab width.
set shiftwidth=2                  " And again, related.
set expandtab                     " Use spaces instead of tabs
set relativenumber                "Default to relative line number
" set number                        "Default to absolute line number
set laststatus=2                  " Show the status line all the time

" colorscheme solarized
" let base16colorspace=256
colorscheme base16-tomorrow
" set background=dark

set showcmd                       " Display incomplete commands.
set cmdheight=1
set winwidth=79                   " Default window width to 79
set showtabline=2
set showmode                      " Display the mode you're in.
set backspace=indent,eol,start    " Intuitive backspacing.
set hidden                        " Handle multiple buffers better.
set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.
set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.
set ttimeoutlen=100               " decrease timeout for faster insert with 'O'
set ruler                         " show row and column in footer
set laststatus=2                  " always show status bar
set list listchars=tab:»·,trail:· " show extra space characters"
set ruler                         " Show cursor position.
set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.
set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.
" set clipboard=unnamed           " use the system clipboard
set cursorline                    " highlight current line"
set mouse=a                       " enable mouse support"
set title                         " Set the terminal's title
set visualbell                    " No beeping.
set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location
" remember more commands and search history
set history=10000
" This makes RVM work inside Vim. I have no idea why.
set shell=bash
" Split default to below and right
set splitbelow
set splitright

" Prevent Vim from clobbering the scrollback buffer. See
" http://www.shallowsky.com/linux/noaltscreen.html
" set t_ti= t_te=
" keep more context when scrolling off the end of a buffer
" set scrolloff=3

" Store temporary files in a central spot
" set backup
" set backupdir=./.backup,.,/tmp
" set directory=.,./.backup,/tmp
" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" put useful info in status bar
set statusline=%F%m%r%h%w\ %{fugitive#statusline()}\ [%l,%c]\ [%L,%p%%]

" set leader key to comma
let mapleader = ","

" associate the .es6 file extension with JavaScript
autocmd BufRead,BufNewFile *.es6 setfiletype javascript

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Ag/Ack config
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:ackprg = 'ag --nogroup --nocolor --column'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Rainbow Parenthe config [REPLACED WITH luochen1990/rainbow]
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" au VimEnter * RainbowParenthesesToggle
" au Syntax * RainbowParenthesesLoadRound

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ctrlp config
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" let g:ctrlp_map = '<leader>f'
let g:ctrlp_max_height = 30
let g:ctrlp_working_path_mode = 0
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

"autocmd vimenter * NERDTree "autoloads nerdtree upon startup
nnoremap <Leader>z :NERDTreeToggle<CR>
runtime macros/matchit.vim        " Load the matchit plugin.

let g:bufExplorerShowRelativePath=1 "make buffer explorer show relative path

" open gist after it's been created
let g:gist_open_browser_after_post = 1

" set autochdir "automatically use current file's dir as working dir
"Using vim-rooter: sets working dir to the upper most git dir

" Window mappings. Move cursor, resizing
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

nnoremap <Leader>- :res -5<cr>
nnoremap <Leader>= :res +5<cr>
nnoremap <Leader>+ :wincmd =<cr>

nnoremap <Leader>] :vertical resize +30<CR>
nnoremap <Leader>[ :vertical resize -30<CR>

" Tab mappings.
nnoremap <leader>tt :tabnew<cr>
nnoremap <leader>te :tabedit
nnoremap <leader>tc :tabclose<cr>
nnoremap <leader>to :tabonly<cr>
nnoremap <leader>tn :tabnext<cr>
nnoremap <leader>tp :tabprevious<cr>
nnoremap <leader>tf :tabfirst<cr>
nnoremap <leader>tl :tablast<cr>
nnoremap <leader>tm :tabmove

" Moving lines up or down by pressing leader-j/k
nnoremap <Leader>k :m .-2<CR>==
nnoremap <Leader>j :m .+1<CR>==
vnoremap <Leader>j :m '>+1<CR>gv=gv
vnoremap <Leader>k :m '<-2<CR>gv=gv


" Uncomment to use Jamis Buck's file opening plugin
"map <Leader>t :FuzzyFinderTextMate<Enter>

" " Controversial...swap colon and semicolon for easier commands
nnoremap ; :
nnoremap : ;

vnoremap ; :
vnoremap : ;

"""""""""""""""""""""""""""""""""""""
" multi-purpose tab key (auto-complete)
" Indent if we're at the beginning of a line. Else, do completion.
"""""""""""""""""""""""""""""""""""""
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Automatic fold settings for specific files. Uncomment to use.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType ruby setlocal foldmethod=syntax
autocmd FileType javascript setlocal foldmethod=syntax
autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2
au BufNewFile,BufReadPost *.coffee setl foldmethod=indent nofoldenable
au BufRead * normal zR

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" F12 to refresh syntax highlighting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
noremap <F12> <Esc>:syntax sync fromstart<CR>
inoremap <F12> <C-o>:syntax sync fromstart<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Syntastic settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Coffeescript
let g:syntastic_coffee_checkers = ['coffeelint', 'coffee']
" let g:syntastic_coffee_coffeelint_args = '--file [absolute path to]/coffeelint.json'

" let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]
let g:syntastic_html_tidy_ignore_errors=["\"menu-toggle"]
"allow for ionic html attributes
let g:syntastic_html_tidy_blocklevel_tags = [
  \'ion-checkbox',
  \'ion-content',
  \'ion-delete-button',
  \'ion-footer-bar',
  \'ion-header-bar',
  \'ion-infinite-scroll',
  \'ion-item',
  \'ion-list',
  \'ion-modal-view',
  \'ion-nav-back-button',
  \'ion-nav-bar',
  \'ion-nav-buttons',
  \'ion-nav-view',
  \'ion-option-button',
  \'ion-pane',
  \'ion-popover-view',
  \'ion-radio',
  \'ion-refresher',
  \'ion-reorder-button',
  \'ion-scroll',
  \'ion-side-menu',
  \'ion-side-menus',
  \'ion-side-menu-content',
  \'ion-slide',
  \'ion-slide-box',
  \'ion-tab',
  \'ion-tabs',
  \'ion-toggle',
  \'ion-view',
  \]

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE with leader+n
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'), 'file')
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
nnoremap <leader>n :call RenameFile()<cr>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PROMOTE VARIABLE TO RSPEC LET
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! PromoteToLet()
  :normal! dd
  :exec '?^\s*it\>'
  :normal! P
  :.s/\(\w\+\) = \(.*\)$/let(:\1) { \2  }/
  :normal ==
endfunction
:command! PromoteToLet :call PromoteToLet()
:map <leader>p :PromoteToLet<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" For the MakeGreen plugin and Ruby RSpec.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd BufNewFile,BufRead *_spec.rb compiler rspec

" jump to last position in file
autocmd BufReadPost *
  \ if line("'\"") > 0 && line("'\"") <= line("$") |
  \   exe "normal g`\"" |
  \ endif

" toggle spell check with <F5>
map <F5> :setlocal spell! spelllang=en_us<cr>
imap <F5> <ESC>:setlocal spell! spelllang=en_us<cr>


"""""""""""""""""""""""""""""""""""""
" Git Specific
"""""""""""""""""""""""""""""""""""""
autocmd Filetype gitcommit setlocal spell textwidth=92 "textwidth=72

"""""""""""""""""""""""""""""""""""""
" Ruby Specific
"""""""""""""""""""""""""""""""""""""
" changes hashrocket to new syntax
vnoremap <Leader>h :s/:\(\w*\) *=>/\1:/g<cr>
" Insert a hash rocket with <c-;>
inoremap <c-o> <space>=><space>
inoremap <c-l> <space>-><space>
inoremap <c-k> \|><space>
inoremap <c-b> """

" Clear the search buffer when hitting return
function! MapCR()
  nnoremap <cr> :nohlsearch<cr>
endfunction
call MapCR()

" highlight the status bar when in insert mode
if version >= 700
  au InsertEnter * hi StatusLine ctermfg=235 ctermbg=2
  au InsertLeave * hi StatusLine ctermbg=240 ctermfg=12
endif

"""""""""""""""""""""""""""""""""""""
" Markdown Specific
"""""""""""""""""""""""""""""""""""""
" User GH flavored markdown by default
augroup markdown
  au!
  au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

""""""""""""""""""""""""""""""""""""
" Javascript
""""""""""""""""""""""""""""""""""""
let g:used_javascript_libs = 'jquery,underscore,angularjs,angularui,requirejs,jasmine'

" set up some custom colors
highlight clear SignColumn
highlight VertSplit    ctermbg=236
highlight ColorColumn  ctermbg=237
highlight LineNr       ctermbg=236 ctermfg=240
highlight CursorLineNr ctermbg=236 ctermfg=240
" highlight CursorLine   ctermbg=236
" highlight CursorLine   ctermbg=240 cterm=underline
highlight CursorLine   ctermbg=238
highlight StatusLineNC ctermbg=238 ctermfg=0
highlight StatusLine   ctermbg=270 ctermfg=12
" TAB COLORS
highlight TabLineFill term=bold cterm=bold ctermfg=0 ctermbg=236
highlight TabLineSel ctermfg=Red ctermbg=Yellow
highlight TabLine ctermfg=Blue ctermbg=LightBlue
" //TAB COLORS
highlight IncSearch    ctermbg=51  ctermfg=3
highlight Search       ctermbg=51  ctermfg=9
highlight Visual       ctermbg=3   ctermfg=0
highlight Pmenu        ctermbg=240 ctermfg=12
highlight PmenuSel     ctermbg=0   ctermfg=3
highlight SpellBad     ctermbg=0   ctermfg=1
